// import About from "./components/About"
import React from 'react'
import About from './components/About';
import Button from './components/Button'
import Fcheader from './components/Fcheader';
// import Header from './components/Header'
import Skills from './components/Skills'

function app(){
  // let age =25;
  // let dob = 1998;
  // let mass = 60
  // const data = {
  //   welcome:"Welcome to react classes",
  //   title:"Educator",
  //   dob:"09-08-1997"
  // }
  // const sayHi =()=>{
  //   alert('hi i am button')
  // }
  return <div>
    
    {/* <About age={age} dob={dob} mass={mass}/> */}
    
    {/* <Skills skills ={['HTML','CSS','JS',"react"]}/>
    <Skills skills ={["Cook","Dance","Sing","code"]}/>
    <Header data={data}/> */}
    {/* <Button text="Say Hi" onClick ={sayHi}/> */}
    <Fcheader/>

  </div>
}

export default app



import React from 'react'
import Fskiils from './components/Fskiils'
import Numbers from './components/Numbers'

export default function App() {
  
  return (
    <div>
      <h1>Numbers List</h1>
      {/* <Numbers numbers = {[1,2,3,4,5,6,7]}/>
      <Numbers numbers = {[5,6,7]}/>
      <Numbers numbers = {[13,45,6,7]}/>
      <Numbers numbers = {[1,2,36,7]}/>
      <Numbers numbers = {["AAdfaer","hgfg","this"]}/> */}
      <Fskiils/>
     
    </div>
  )
}


import React from 'react'

export default function App() {
  const anything = [
    ["Adfar","React","Html"],
    ["Lavkush","Adarsh","Javascript"]
  ]
  return (
    <div>
      {anything.map((item,index)=>{
        return (
          <ol key={index}>
            {item.map((subitems,sindex)=>{
              return <li key={sindex}>{subitems}</li>
            })}
          </ol>
        )
      })}
    </div>
  )
}


import React from 'react'

export default function App() {
  const students = [
    ["Name","Subject","Marks"],
    ["Adfar","React","100"],
    ["Himanshu","CSS","99"]
  ]
  return (
    <div>
      <table>
        <thead>
          <tr>
            {students[0].map((item,index)=>{
              return <th key={index}>{item}</th>
            })}
          </tr>
        </thead>
        <tbody>
          {students.slice(1,students.length).map((item,index)=>{
            return (
              <tr key={index}>
                <td >{item[0]}</td>
                <td >{item[1]}</td>
                <td >{item[2]}</td>
              </tr>
            )
          })}
        </tbody>
      </table>
    </div>
  )
}


import React from 'react'

export default function App() {
  const people = [
    {id:1,name:"Adfar",skills:["react","html","css"]},
    {id:2,name:"Kanupriya",skills:["HTML","CSS","Node"]},
    {id:3,name:"Amrit",skills:["Music","Coding","swimming"]}
  ]
  return (
    <div>
      {people.map((person,index)=>{
       return (
        <div key={index}>
          <h2>Name : {person.name}</h2>
          {person.skills.map((skill,index)=>{
            return (
              <div key={index}>
                <h2>Skills: {skill}</h2>
              </div>
            )
          })}
        </div>
       )
      })}
    </div>
  )
}

// This is conditional rendering components
import React from 'react'
function Ele1(props){
  return <h1>I am element One</h1>
}
function Ele2(props){
  return <h1>I am element 2</h1>
}
function RealOutput(props){
  const isOutput = props.isOutput;
  if(isOutput){
    return <Ele1/>
  }
  else {
    return <Ele2/>
  }
}
export default function App() {
  return (
    <div>
      <RealOutput isOutput={true}/>
    </div>
  )
}


// conditional && operatofa-rotate-180

import React from 'react'

export default function App() {
  return (
    <div>
      {(10>5) && alert('hi adfar')}
    </div>
  )
}


Ternary operator 

import React from 'react'

export default function App() {
  const isOutput = false
  return (
    <div>
      Welcome {isOutput ? "Back" : "Front"}
    </div>
  )
}


//states in class based components

import React, { Component } from 'react'

export default class App extends Component {
  constructor(props){
    super(props)
    this.state = {
      count :105,
    }
  }
  addone=()=>{
    this.setState({count:this.state.count+1})
  }
  addtwo=()=>{
    this.setState({count:this.state.count+2})
  } 
  addthree=()=>{
    this.setState({count:this.state.count+3})
  }

  render() {
    const count = this.state.count
    return (
      <>
      <h1>{count}</h1>
      <button onClick={this.addone}>Add One</button>
      <button onClick={this.addtwo}>Add Two</button>
      <button onClick={this.addthree}>Add Three</button>
      </>
    )
  }
}



import React , {useState} from 'react'

export default function App() {
  const [like, setLike] = useState(0)
  const [unlike,setUnlike] = useState(0)
  const sub = () => {
    setUnlike(unlike-1)
    setLike(like-1)
  } 
  const add = ()=>{
    setLike(like+1)
    setUnlike(unlike-1)
  }
  return (
    <div>
      
      <button onClick={add}>Like | {like}</button>
      <button onClick={sub}>Dislike {unlike}</button>
    </div>
  )
}



import React from 'react'
import Message from './components/Text/Message'
import About from './components/Text/About'

export default function App() {
  return (
    <div>
      <About/>
      <Message/>
    </div>
  )
}

import React, { Component } from 'react'

export default class App extends Component {
  constructor(){
    super()
    this.name = React.createRef()
    this.password =React.createRef()
  }
  submitHandler(event){
    event.preventDefault()
    const data = {
      name : this.name.current.value,
      password : this.password.current.value
    }
    console.log(data)
  }
  render() {
    return (
      <div>
        <h1>Uncontrolled</h1>
        <form onSubmit={(event)=>{this.submitHandler(event)}}>
          <input type="text" placeholder='Enter Name' ref={this.name} /> <br /><br />
          <input type="password" placeholder='Enter Password' ref={this.password}/><br /><br />
          <button type='submit'>Submit</button>
        </form>
      </div>
    )
  }
}



import React, { useRef } from 'react'

export default function App() {
  const inputnameref = useRef()
  const handlesubmit =(e)=>{
    e.preventDefault()
    console.log(inputnameref.current.value)
  }
  return (
    <div>
      <h1>Uncontrolled fb component</h1>
      <form onSubmit={(e)=>{handlesubmit(e)}}>
        <input type="text" placeholder='Enter Name' ref={inputnameref}/><br /><br />
        <button type='submit'>Submit</button>
      </form>
    </div>
  )
}



import React, { Component } from 'react'

export default class App extends Component {
  constructor(){
    super()
    this.state ={
      name  :"",
      password : "",
    }
  }
  submit(){
    console.log(this.state)
  }
  render() {
    return (
      <div>
        <h1>Controlled components</h1>
        <input type="text" placeholder='Enter Name' 
        onChange={(event)=>{this.setState({name : event.target.value})}}/>
        <input type="password" placeholder='Enter Password' 
        onChange={(event)=>{this.setState({password : event.target.value})}}/>
        <button onClick={()=>{this.submit()}}>Submit</button>
      </div>
    )
  }
}



import React, { Component } from 'react'

export default class App extends Component {
  constructor(){
    super()
    console.log("Constructor called")
  }
  static getDerivedStateFromProps(props,state){
    console.log("get derived state from props called")
  }
  componentDidMount(){
    console.log("cdm called")
  }
  render() {
    console.log("render called")
    return (
      <div>
        ertgdr
      </div>
    )
  }
}


import React, { Component } from 'react'
const User = ({firstName}) => (
  <div>
    <h1>Hello {firstName}</h1>
  </div>
)
export default class App extends Component {
  constructor(props){
    super(props)
    console.log("i am constructor")
    this.state = {
      firstName : "John"
    }
  }
  static getDerivedStateFromProps(props,state){
    console.log("gdsfp methods")
    console.log(props,state)
    return {firstName : props.firstName}
  }
  render() {
    return (
      <div>
        <h1>Adfar Rasheed</h1>
        <User firstName ={this.state.firstName}/>
      </div>
    )
  }
}


import React, { Component } from 'react'

export default class App extends Component {
  constructor(props){
    super(props)
    console.log("contsructor called")
    this.state = {
      firstName : "John"
    }
  }
  componentDidMount(){
    console.log("CDM called")
    setTimeout(()=>{
      this.setState({
        firstName : "Adfar"
      })
    },4000)
  }
  render() {
    return (
      <div>
        <h1> Hello {this.state.firstName}</h1>
      </div>
    )
  }
}


import React, { Component } from 'react'

export default class App extends Component {
  constructor(props){
    super(props)
    this.state = {
      data : 1,
      congratulate : "",
    }
  }
  doChallenge=()=>{
    this.setState({
      data : this.state.data + 1
    })
  }
  shouldComponentUpdate(nextProps,nextState){
    // console.log(nextProps,nextState)
    // console.log(nextState.data)
    if(nextState.data >= 15){
      return false
    }
    else {
      return true
    }
  }
  componentDidUpdate(prevProps,prevState){
    // console.log("cdu")
    if(prevState.data === 10){
      this.setState({
        congratulate : "congratulations on completing the task"
      })
    }
    console.log(prevState.congratulate)
  }
  render() {
    // console.log("adfar")
    return (
      <div>
        
        <h1>{this.state.data}</h1>
        <button onClick={this.doChallenge}>Increment</button>
        <h1>{this.state.congratulate}</h1>
      </div>
    )
  }
}


import React from 'react'

export default function App() {
  const myStyle = {
    color:"red",
    backgroundColor : "green"
  }
  return (
    <div>
      <h1 style={ myStyle}>ADfar Rasheed</h1>
      <p style={ myStyle}>jnahdfhsdufdwb</p>
    </div>
  )
}

import React, { Component } from 'react'
import "./App.css"
export default class App extends Component {
  constructor(props){
    super(props)
      this.state = {
        isClassActive : false,
    }
  }
  toggleclass = ()=>{
      this.setState({
        isClassActive:!this.state.isClassActive
      })
  }
  render() {
    return (
      <div className='mainClass'>
        <h1 className={this.state.isClassActive ? "active" : "adfar"}>Adfar Rasheed</h1>
        <button onClick={this.toggleclass}>Click Me</button>
      </div>
    )
  }
}



import React, { useEffect, useState } from 'react'

export default function App() {
  const [count,setCount] = useState(0)
  const [name,setName] = useState("Adfar")
  useEffect(()=>{
    console.log("1")
    const eventHandler=()=>console.log("Hi")
    document.addEventListener("click",eventHandler);
    return ()=>{
      console.log("2")
      document.removeEventListener("click",eventHandler)
    }
  },[count])
  return (
    <div>
      <h1>{count}</h1>
      <h1>{name}</h1>
      <button onClick={()=>setCount(count+1)}>Update count</button>
      <button onClick={()=>setName("Aparna")}>Update Name</button>
    </div>
  )
}



import React, { useEffect, useState } from 'react'

export default function App() {
  const [count,setCount] = useState(0)
  const [name,setName] = useState("Adfar")
  useEffect(()=>{
    const ci = setInterval(()=>{
      console.log("hi")
    },1000)
    return ()=>{
      clearInterval(ci)
    }
  },[count])
  return (
    <div>
      <h1>{count}</h1>
      <h1>{name}</h1>
      <button onClick={()=>setCount(count+1)}>Update count</button>
      <button onClick={()=>setName("Aparna")}>Update Name</button>
    </div>
  )
}
