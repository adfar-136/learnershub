{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LEGION\\\\Desktop\\\\Batches\\\\Learners Hub\\\\Reactt\\\\projects\\\\authentication\\\\firebase\\\\src\\\\Todo\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Inbox(props) {\n  _s();\n  const [newTask, setNewTask] = useState(false);\n  const titleRef = useRef();\n  const calendarRef = useRef();\n  const newtaskHandler = () => {\n    setNewTask(true);\n  };\n  const addHandler = e => {\n    e.preventDefault();\n    if (titleRef.current.value === \"\") {\n      window.alert(\"Task Can Not be empty\");\n      return;\n    }\n    const newObj = {\n      number: props.list.length + 1,\n      title: titleRef.current.value,\n      date: new Date(calendarRef.current.value)\n    };\n    props.append(newObj);\n    setNewTask(false);\n  };\n  const cancelHandler = () => {\n    setNewTask(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"INBOX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 6\n    }, this), !newTask && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new\",\n      onClick: newtaskHandler,\n      children: \"+Add New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), newTask && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"newtask-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: titleRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new\",\n          onClick: addHandler,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new\",\n          onClick: cancelHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          ref: calendarRef,\n          defaultValue: \"2023-01-04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.list.map(list => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box\",\n          children: [list.title, \" (\", list.date.toLocaleDateString(), \")\"]\n        }, list.number, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Inbox, \"Q5jfdBNcYWC4tzxFzcQkNwQqMOQ=\");\n_c = Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useRef","useState","Inbox","props","newTask","setNewTask","titleRef","calendarRef","newtaskHandler","addHandler","e","preventDefault","current","value","window","alert","newObj","number","list","length","title","date","Date","append","cancelHandler","map","toLocaleDateString"],"sources":["C:/Users/LEGION/Desktop/Batches/Learners Hub/Reactt/projects/authentication/firebase/src/Todo/Inbox.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\r\n\r\nexport default function Inbox(props) {\r\n  const [newTask,setNewTask] = useState(false)\r\n  const titleRef = useRef()\r\n  const calendarRef = useRef()\r\n  const newtaskHandler=()=>{\r\n    setNewTask(true)\r\n  }\r\n  const addHandler=(e)=>{\r\n    e.preventDefault()\r\n    if(titleRef.current.value === \"\"){\r\n      window.alert(\"Task Can Not be empty\");\r\n      return;\r\n    }\r\n    const newObj = {\r\n      number: props.list.length+1,\r\n      title: titleRef.current.value,\r\n      date : new Date(calendarRef.current.value)\r\n    }\r\n    props.append(newObj)\r\n    setNewTask(false)\r\n  }\r\n  const cancelHandler=()=>{\r\n    setNewTask(false)\r\n  }\r\n  return (\r\n    <div>\r\n     <h3>INBOX</h3>\r\n     {!newTask && (\r\n      <button className=\"new\" onClick={newtaskHandler}>+Add New</button>\r\n     )}\r\n     {newTask && (\r\n      <form className='newtask-box'>\r\n        <input type=\"text\" ref={titleRef}/>\r\n        <div className=\"buttons\">\r\n          <button className='new' onClick={addHandler}>Add Task</button>\r\n          <button className=\"new\" onClick={cancelHandler}>Cancel</button>\r\n          <input type=\"date\" ref={calendarRef} defaultValue=\"2023-01-04\"/>\r\n        </div>\r\n      </form>\r\n     )}\r\n     <div>\r\n      {props.list.map((list)=>{\r\n        return (\r\n          <div className=\"box\" key={list.number}>\r\n            {list.title} ({list.date.toLocaleDateString()})\r\n          </div>\r\n        )\r\n      })}\r\n     </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAE/C,eAAe,SAASC,KAAK,CAACC,KAAK,EAAE;EAAA;EACnC,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAMK,QAAQ,GAAGN,MAAM,EAAE;EACzB,MAAMO,WAAW,GAAGP,MAAM,EAAE;EAC5B,MAAMQ,cAAc,GAAC,MAAI;IACvBH,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EACD,MAAMI,UAAU,GAAEC,CAAC,IAAG;IACpBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAGL,QAAQ,CAACM,OAAO,CAACC,KAAK,KAAK,EAAE,EAAC;MAC/BC,MAAM,CAACC,KAAK,CAAC,uBAAuB,CAAC;MACrC;IACF;IACA,MAAMC,MAAM,GAAG;MACbC,MAAM,EAAEd,KAAK,CAACe,IAAI,CAACC,MAAM,GAAC,CAAC;MAC3BC,KAAK,EAAEd,QAAQ,CAACM,OAAO,CAACC,KAAK;MAC7BQ,IAAI,EAAG,IAAIC,IAAI,CAACf,WAAW,CAACK,OAAO,CAACC,KAAK;IAC3C,CAAC;IACDV,KAAK,CAACoB,MAAM,CAACP,MAAM,CAAC;IACpBX,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACD,MAAMmB,aAAa,GAAC,MAAI;IACtBnB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACD,oBACE;IAAA,wBACC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,EACb,CAACD,OAAO,iBACR;MAAQ,SAAS,EAAC,KAAK;MAAC,OAAO,EAAEI,cAAe;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAChD,EACAJ,OAAO,iBACP;MAAM,SAAS,EAAC,aAAa;MAAA,wBAC3B;QAAO,IAAI,EAAC,MAAM;QAAC,GAAG,EAAEE;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE,eACnC;QAAK,SAAS,EAAC,SAAS;QAAA,wBACtB;UAAQ,SAAS,EAAC,KAAK;UAAC,OAAO,EAAEG,UAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAkB,eAC9D;UAAQ,SAAS,EAAC,KAAK;UAAC,OAAO,EAAEe,aAAc;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAgB,eAC/D;UAAO,IAAI,EAAC,MAAM;UAAC,GAAG,EAAEjB,WAAY;UAAC,YAAY,EAAC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAE;MAAA;QAAA;QAAA;QAAA;MAAA,QAC5D;IAAA;MAAA;MAAA;MAAA;IAAA,QAER,eACD;MAAA,UACEJ,KAAK,CAACe,IAAI,CAACO,GAAG,CAAEP,IAAI,IAAG;QACtB,oBACE;UAAK,SAAS,EAAC,KAAK;UAAA,WACjBA,IAAI,CAACE,KAAK,QAAIF,IAAI,CAACG,IAAI,CAACK,kBAAkB,EAAE;QAAA,GADrBR,IAAI,CAACD,MAAM;UAAA;UAAA;UAAA;QAAA,QAE/B;MAEV,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GAnDuBf,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}